version: '3.8'
services:
  mysql:
    image: mysql:8.0
    container_name: chemist_task_db
    environment:
      MYSQL_ROOT_PASSWORD: '@12345Admin'
      MYSQL_DATABASE: 'chemist_task_db'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: '@12345Admin'
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: chemist_backend
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=chemist_task_db
      - DB_USER=admin
      - DB_PASSWORD=@12345Admin
      - DATABASE_URL=mysql://admin:@12345Admin@mysql:3306/chemist_task_db
      - JWT_SECRET=bd45e580208b7f1a0f5117677d260b7a06de3eedee79d03bf505ccda316bdcf8
      - JWT_EXPIRES_IN=1d
      - PRISMA_MIGRATION_NAME=init
      - PORT=4000
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    command: ["./startup.sh"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chemist_frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api
      - NEXT_TELEMETRY_DISABLED=1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: chemist_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      MYSQL_ROOT_PASSWORD: '@12345Admin'
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: 